((2) 0 () 0 () () (c require c (c planet c schematics/random:1:0/random)))
((2) 0 () 0 () () (void))
((2) 0 () 0 () () (c random-gaussian))
((2) 0 () 0 () () 0.7386912134436788)
((2) 0 () 0 () () (c require c slideshow/code))
((2) 0 () 0 () () (void))
((2) 0 () 0 () () (c code c (c circle c 10)))
((2) 1 (((lib "scribble/core.rkt") . deserialize-info:image-element-v0)) 0 () () (0 #f (c "[image]") (u . "images/img0") (c ".pdf" c ".png") 1.0))
((2) 0 () 0 () () (c define-syntax c pict+code c (c syntax-rules c () c (c (c pict+code c expr) c (c hc-append c 10 c expr c (c code c expr))))))
((2) 0 () 0 () () (void))
((2) 0 () 0 () () (c pict+code c (c circle c 10)))
((2) 1 (((lib "scribble/core.rkt") . deserialize-info:image-element-v0)) 0 () () (0 #f (c "[image]") (u . "images/img1") (c ".pdf" c ".png") 1.0))
((2) 0 () 0 () () (c require c racket/class c racket/gui/base))
((2) 0 () 0 () () (void))
((2) 0 () 0 () () (c define c f c (c new c frame% c (c label c "My Art") c (c width c 300) c (c height c 300) c (c alignment c (c quote c (c center c center))))))
((2) 0 () 0 () () (void))
((2) 0 () 0 () () (c send c f c show c #t))
((2) 0 () 0 () () (void))
((2) 0 () 0 () () (c send c f c show c #f))
((2) 0 () 0 () () (void))
((2) 0 () 0 () () (c require c pict/flash))
((2) 0 () 0 () () (void))
((2) 0 () 0 () () (c define c (c add-drawing c p) c (c let c (c (c drawer c (c make-pict-drawer c p))) c (c new c canvas% c (c parent c f) c (c style c (c quote c (c border))) c (c paint-callback c (c lambda c (c self c dc) c (c drawer c dc c 0 c 0)))))))
((2) 0 () 0 () () (void))
((2) 0 () 0 () () (c add-drawing c (c pict+code c (c circle c 10))))
((2) 1 (((lib "scribble/core.rkt") . deserialize-info:element-v0)) 0 () () (0 #f (c (u . "#(struct:object:canvas% ...)"))))
((2) 0 () 0 () () (c add-drawing c (c colorize c (c filled-flash c 50 c 30) c "yellow")))
((2) 1 (((lib "scribble/core.rkt") . deserialize-info:element-v0)) 0 () () (0 #f (c (u . "#(struct:object:canvas% ...)"))))
((2) 0 () 0 () () (c scale c (c bitmap c (c build-path c (c collection-path c "scribblings/quick") c "art.png")) c 0.5))
((2) 1 (((lib "scribble/core.rkt") . deserialize-info:image-element-v0)) 0 () () (0 #f (c "[image]") (u . "images/img2") (c ".pdf" c ".png") 1.0))
