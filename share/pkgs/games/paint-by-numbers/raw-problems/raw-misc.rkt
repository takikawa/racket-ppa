#lang racket/base
(provide raw-misc)

#|

raw-misc.rkt

This file contains the built-in problems in a raw format. It is
intended to be processed by the solver which will produce
"problems.rkt". This file should contain a single sexpression of this
type:

  (listof (list string cols rows))

The cols and rows types are specified in sig.rkt

|#
(define raw-misc
`(
  ("Happy Happy Joy Joy"
   ((5) (9) (2 7) (4 8) (4 7) (6 7) (7 7) (7 6) (7 5) (5 1 4) (4 2 3) (2 4 1) (9) (5))
   ((4) (8) (10) (12) (1 8 1) (2 5 2) (4 3 3) (5 4) (7 5) (8 3) (9 1) (10 1) (10) (8) (4)))

;  ("Ieleuj"
;   ((1) (1) (2) (1) (1) (2) (1) (1) (1 2) (5) (3) (1) (1) (1 3) (4 2) (3) (1) (1 1) (1 3) (4 1 3) (2 2 2) (6) (1) (1) (1 1) (1 1 2) (3 1 3) (4 1 3) (6) (3) (1) (1 1) (3 1 3) (2 1 1 1 2) (2 1 1 1 2) (5 3 1) (2 1 2) (9) (3 1 1) (1) (1 1 1) (2 1 2) (3 1 1 1 3) (2 1 1 1 2) (1 4 1 4 1) (2 1 2) (9) (3 1 3) (1) (1) (1) (1) (1))
;   ((1) (1 2) (2 2) (1 1 2 1) (1 1 1 2) (1 1 1 1 2 2 2 2) (3 1 2 1 2 2 1 1 1 1) (7 2 1 1 1 2 1 2) (7 2 3 4 4) (2 7 2 4 4) (1 2 11 1 1) (2 2 1 21) (1 3 2 1 1 1) (2 2 5 4) (2 2 2 4) (2 2 1 2 1 2) (2 2 1 1) (1 1 2) (2 2) (2 1) (2 2) (2) (1)))

;  ("John "
;   ((15 16) (9 2 1 2 14) (6 1 2 2 1 2 12) (9 2 1 1 1 13) (4 1 1 2 2 1 1 1 11) (5 2 1 1 1 1 1 1 10) (4 2 1 1 2 1 1 2 10) (3 1 1 2 2 1 1 1 1 1 4 3) (2 3 2 2 4 1 1 1 1 1 4) (1 1 1 2 2 3 2 1 1 1 1 2 2) (1 2 1 6 2 2 1 6 3) (2 1 3 8 1 3 1 2 2) (1 1 2 1 2 2 2 1 2 5 3) (2 1 1 10 1 10) (1 1 1 2 1 1 1 2 2 2 2 1) (2 2 2 2 1 2 1 1 6 2) (1 1 1 1 1 3 1 2 1 1 1 3) (1 1 3 1 1 1 2 1 1 2 2 1 1) (3 1 3 2 1 1 1 2 2 2 1) (1 2 2 2 2 2 1 1 1 1 1 2) (1 1 2 2 3 2 1 1 2 2 1 1) (2 2 2 3 4 4 2 4) (1 2 1 4 2 1 2 1 2 1 1) (3 3 1 2 4 10) (1 1 1 1 7 1 2 1 1 1) (2 3 1 1 1 9 5) (1 2 2 1 2 1 2 5 1) (1 1 2 1 1 1 1 2 1 1 1 2) (2 1 1 2 1 1 1 3 2 1 1) (1 1 2 1 2 2 1 1 2 1) (1 1 1 1 1 1 2 2 1 1 1) (2 1 1 2 1 1 2 1 1 1) (1 1 2 1 1 1 1 1 2 1 1 1))
;   ((11 1 1 1 3 4 4) (9 1 4 2 1 1 1 1 1) (8 5 2 1 3 5 1) (7 1 1 3 2 3 2 1) (4 1 3 3 1 1 3 2 4 1) (5 1 1 1 1 1 3 1 2 1 1 1 2) (2 1 3 1 1 1 1 1 1 1 2 1 1 1) (6 5 3 6 3 1 2) (2 1 3 2 2 2 1 1 1 1 2) (1 1 2 1 2 2 2 2 8 1) (5 1 6 1 1 4 1 3) (2 1 1 2 2 2 1 1 2 7 1) (1 1 1 2 5 6 3 1 2) (5 1 2 4 1 1 2 2 4 1) (1 1 5 1 1 2 2 4 1 1) (4 1 1 8 5 1 2 3) (2 1 3 3 2 1 5 2) (1 3 1 3 5 1 2 2 1 2) (3 1 2 1 1 1 1 2 2 2 4 1) (2 2 1 1 1 1 1 1 2 4 1 1) (4 4 1 1 1 1 2 3 3 2 1) (5 1 5 2 2 1 2 2 1) (9 2 1 3 2 3 3 1) (7 7 1 3 2 1) (9 1 10 3 2) (8 5 1 1 1 2 1 1 1) (9 1 5 2 1 4) (8 6 3 4 1) (7 2 1 1 2 1 1 1 1) (9 1 4 5 1) (14) (13)))

;  ("buff"
;   ((2 3 3) (2 2 2 2 2) (2 2 2) (5 2 2 2 2) (2 4 7 5) (2 4 2 2 2) (2 4 2 2 2) (2 4 3 2 2) (5 5 2 2))
;   ((9) (9) (1 1) (1 1) (6) (4) (5) (6) (1) (2) (6) (6) (1) (8) (9) (1 1) (2 1) (1) (1) (8) (9) (1 1) (2 1) (1)))

  ("Solver Breaker"
   ((1) (2 2) (1) (2) (2 2) (1))
   ((1) (2 2) (1 1) (1) (2 2) (1)))

  )
)
