
(define-primitive-table network-table
  [tcp-abandon-port (known-procedure 2)]
  [tcp-accept (known-procedure 2)]
  [tcp-accept-evt (known-procedure 2)]
  [tcp-accept-ready? (known-procedure 2)]
  [tcp-accept/enable-break (known-procedure 2)]
  [tcp-addresses (known-procedure 6)]
  [tcp-close (known-procedure 2)]
  [tcp-connect (known-procedure 28)]
  [tcp-connect/enable-break (known-procedure 28)]
  [tcp-listen (known-procedure 30)]
  [tcp-listener? (known-procedure 2)]
  [tcp-port? (known-procedure 2)]
  [udp-bind! (known-procedure 24)]
  [udp-bound? (known-procedure 2)]
  [udp-close (known-procedure 2)]
  [udp-connect! (known-procedure 8)]
  [udp-connected? (known-procedure 2)]
  [udp-set-ttl! (known-procedure 4)]
  [udp-ttl (known-procedure 2)]
  [udp-multicast-interface (known-procedure 2)]
  [udp-multicast-join-group! (known-procedure 8)]
  [udp-multicast-leave-group! (known-procedure 8)]
  [udp-multicast-loopback? (known-procedure 2)]
  [udp-multicast-set-interface! (known-procedure 4)]
  [udp-multicast-set-loopback! (known-procedure 4)]
  [udp-multicast-set-ttl! (known-procedure 4)]
  [udp-multicast-ttl (known-procedure 2)]
  [udp-open-socket (known-procedure 7)]
  [udp-receive! (known-procedure 28)]
  [udp-receive!* (known-procedure 28)]
  [udp-receive!-evt (known-procedure 28)]
  [udp-receive!/enable-break (known-procedure 28)]
  [udp-receive-ready-evt (known-procedure 2)]
  [udp-send (known-procedure 28)]
  [udp-send* (known-procedure 28)]
  [udp-send-evt (known-procedure 28)]
  [udp-send-ready-evt (known-procedure 2)]
  [udp-send-to (known-procedure 112)]
  [udp-send-to* (known-procedure 112)]
  [udp-send-to-evt (known-procedure 112)]
  [udp-send-to/enable-break (known-procedure 112)]
  [udp-send/enable-break (known-procedure 28)]
  [udp-set-receive-buffer-size! (known-procedure 4)]
  [udp? (known-procedure 2)])
