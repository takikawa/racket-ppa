diff -u -r orig/pango-1.42.0/pango/pangocairo-coretextfont.c next/pango-1.42.0/pango/pangocairo-coretextfont.c
--- orig/pango-1.42.0/pango/pangocairo-coretextfont.c	2017-08-15 15:53:10.000000000 -0600
+++ next/pango-1.42.0/pango/pangocairo-coretextfont.c	2018-03-28 21:15:02.000000000 -0600
@@ -145,6 +145,12 @@
   metrics->strikethrough_position = metrics->ascent / 3;
   metrics->strikethrough_thickness = CTFontGetUnderlineThickness (ctfont) * PANGO_SCALE;
 
+  metrics->underline_position = -metrics->underline_position;
+  pango_quantize_line_geometry (&metrics->underline_thickness,
+                                &metrics->underline_position);
+  metrics->underline_position = -(metrics->underline_position 
+                                  + metrics->underline_thickness);
+
   layout = pango_layout_new (context);
   font_desc = pango_font_describe_with_absolute_size ((PangoFont *) font);
   pango_layout_set_font_description (layout, font_desc);
diff -u -r orig/pango-1.42.0/pango/pangocoretext-shape.c next/pango-1.42.0/pango/pangocoretext-shape.c
--- orig/pango-1.42.0/pango/pangocoretext-shape.c	2016-10-21 23:00:41.000000000 -0600
+++ next/pango-1.42.0/pango/pangocoretext-shape.c	2018-03-28 21:22:58.000000000 -0600
@@ -34,7 +34,8 @@
 	   PangoGlyphString *glyphs,
 	   int               i,
 	   int               offset,
-	   PangoGlyph        glyph)
+	   PangoGlyph        glyph,
+           CGSize            *adv)
 {
   PangoRectangle logical_rect;
 
@@ -44,8 +45,13 @@
   glyphs->glyphs[i].geometry.y_offset = 0;
 
   glyphs->log_clusters[i] = offset;
-  pango_font_get_glyph_extents (font, glyphs->glyphs[i].glyph, NULL, &logical_rect);
-  glyphs->glyphs[i].geometry.width = logical_rect.width;
+  if (adv) {
+    /* by using the advances array, we get kerning */
+    glyphs->glyphs[i].geometry.width = adv->width * PANGO_SCALE;
+  } else {
+    pango_font_get_glyph_extents (font, glyphs->glyphs[i].glyph, NULL, &logical_rect);
+    glyphs->glyphs[i].geometry.width = logical_rect.width;
+  }
 }
 
 
@@ -74,6 +80,8 @@
   CFIndex *current_indices;
   const CGGlyph *current_cgglyphs;
   CGGlyph *current_cgglyphs_buffer;
+  const CGSize *current_cgadvs;
+  CGSize *current_cgadvs_buffer;
   CTRunStatus current_run_status;
 };
 
@@ -86,6 +94,9 @@
   if (iter->current_cgglyphs_buffer)
     free (iter->current_cgglyphs_buffer);
   iter->current_cgglyphs_buffer = NULL;
+  if (iter->current_cgadvs_buffer)
+    free (iter->current_cgadvs_buffer);
+  iter->current_cgadvs_buffer = NULL;
   if (iter->current_indices)
     free (iter->current_indices);
   iter->current_indices = NULL;
@@ -113,6 +124,15 @@
       iter->current_cgglyphs = iter->current_cgglyphs_buffer;
     }
 
+  iter->current_cgadvs = CTRunGetAdvancesPtr (iter->current_run);
+  if (!iter->current_cgadvs)
+    {
+      iter->current_cgadvs_buffer = (CGSize *)malloc (sizeof (CGSize) * ct_glyph_count);
+      CTRunGetAdvances (iter->current_run, CFRangeMake (0, ct_glyph_count),
+                        iter->current_cgadvs_buffer);
+      iter->current_cgadvs = iter->current_cgadvs_buffer;
+    }
+
   iter->current_indices = malloc (sizeof (CFIndex) * ct_glyph_count);
   CTRunGetStringIndices (iter->current_run, CFRangeMake (0, ct_glyph_count),
                          iter->current_indices);
@@ -208,6 +228,12 @@
   return iter->current_cgglyphs[iter->ct_i];
 }
 
+static CGSize
+run_iterator_get_cgadv (struct RunIterator *iter)
+{
+  return iter->current_cgadvs[iter->ct_i];
+}
+
 static CFIndex
 run_iterator_get_index (struct RunIterator *iter)
 {
@@ -239,6 +265,7 @@
   iter->chr_idx_lut = NULL;
   iter->current_cgglyphs = NULL;
   iter->current_cgglyphs_buffer = NULL;
+  iter->current_cgadvs_buffer = NULL;
 
   /* Create CTLine */
   attributes = CFDictionaryCreate (kCFAllocatorDefault,
@@ -336,6 +363,7 @@
 {
   CFIndex index;
   CGGlyph cgglyph;
+  CGSize cgadv;
   gunichar wc;
 };
 
@@ -377,6 +405,7 @@
       gi = g_slice_new (struct GlyphInfo);
       gi->index = run_iterator_get_index (&riter);
       gi->cgglyph = run_iterator_get_cgglyph (&riter);
+      gi->cgadv = run_iterator_get_cgadv (&riter);
       gi->wc = run_iterator_get_character (&riter);
 
       glyph_list = g_slist_prepend (glyph_list, gi);
@@ -466,7 +495,7 @@
            * up with the CoreText glyph list. This occurs for instance when
            * CoreText inserts a ligature that covers two characters.
            */
-          set_glyph (font, glyphs, gs_i, p - text, PANGO_GLYPH_EMPTY);
+          set_glyph (font, glyphs, gs_i, p - text, PANGO_GLYPH_EMPTY, NULL);
           continue;
         }
       else if (gi->index < gs_i)
@@ -502,7 +531,7 @@
 
           if (result != PANGO_COVERAGE_NONE)
             {
-              set_glyph (font, glyphs, gs_i, p - text, gi->cgglyph);
+              set_glyph (font, glyphs, gs_i, p - text, gi->cgglyph, &gi->cgadv);
 
               if (g_unichar_type (gi->wc) == G_UNICODE_NON_SPACING_MARK)
                 {
@@ -525,7 +554,7 @@
                 }
             }
           else
-            set_glyph (font, glyphs, gs_i, p - text, PANGO_GET_UNKNOWN_GLYPH (gi->wc));
+            set_glyph (font, glyphs, gs_i, p - text, PANGO_GET_UNKNOWN_GLYPH (gi->wc), NULL);
 
           glyph_iter = g_slist_next (glyph_iter);
         }
