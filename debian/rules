#!/usr/bin/make -f

include /usr/share/cdbs/1/rules/debhelper.mk
include /usr/share/cdbs/1/class/autotools.mk
include debian/racket-arch.mk

DEB_HOST_ARCH ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_CONFIGURE_SCRIPT := $(CURDIR)/src/configure
# Some architectures don't like the 3m garbage collector, so use Boehm (aka
# cgc)
ifneq (,$(filter alpha powerpc ppc64 mips mipsel,$(DEB_HOST_ARCH)))
    DEB_CONFIGURE_EXTRA_FLAGS := --enable-cgcdefault
endif
# Upstream does funky things with assembly, so we'll have to trust their 
# compilation settings and override cdbs/dpkg-buildpackage defaults for
# configure and make
DEB_CONFIGURE_SCRIPT_ENV = CFLAGS="-g" CXXFLAGS=""
DEB_MAKE_ENVVARS = CFLAGS="-g" CXXFLAGS=""

DEB_BUILDDIR := $(DEB_SRCDIR)/build

DEB_DH_INSTALL_ARGS_racket-common = -X${RACKET_ARCH}
DEB_DH_INSTALL_ARGS_racket-doc = -Xdoc/release-notes

install/racket::
	find debian/tmp/usr/lib/racket -type d -name ${RACKET_ARCH} | sed s@debian/tmp/@@ |xargs dh_install -pracket 

cleanbuilddir/racket::
	rm -rf build
	rm -rf include # This got created at build-time
debian/racket-arch.mk: debian/racket-arch.c
	touch debian/mzconfig.h && cpp -Isrc -Idebian -o $@ debian/racket-arch.c
