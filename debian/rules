#!/usr/bin/make -f

include /usr/share/cdbs/1/rules/debhelper.mk
include /usr/share/cdbs/1/class/autotools.mk
include debian/racket-arch.mk

DEB_HOST_ARCH ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_CONFIGURE_SCRIPT := $(CURDIR)/src/configure
DEB_DH_GENCONTROL_ARGS_racket := -- -Vracket:GC=3m
MZDYN := mzdyn3m.o

# Some architectures don't like the 3m garbage collector, so use Boehm (aka
# cgc)
ifneq (,$(filter alpha hppa powerpc ppc64 mips mipsel,$(DEB_HOST_ARCH)))
    DEB_CONFIGURE_EXTRA_FLAGS := --enable-cgcdefault
    DEB_DH_GENCONTROL_ARGS_racket := -- -Vracket:GC=cgc
    MZDYN := mzdyn.o
endif

# keep the collect build from using every available core, unless 
# explicitly enabled.
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
        NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
else
	NUMJOBS = 1
endif

# Support for generating ".orig.tar.gz" from git

SOURCEPKG=$(shell dpkg-parsechangelog | sed  -n 's/^Source: \(.*\)/\1/p')
UPSTREAM=$(shell dpkg-parsechangelog |  sed -n 's/^Version: \(.*\)-[^-]*/\1/p')
ORIG=${SOURCEPKG}_${UPSTREAM}.orig.tar.gz

# Upstream does funky things with assembly, so we'll have to trust their
# compilation settings and override cdbs/dpkg-buildpackage defaults for
# configure and make
DEB_CONFIGURE_SCRIPT_ENV = CFLAGS="-g" CXXFLAGS=""
DEB_MAKE_ENVVARS = CFLAGS="-g" CXXFLAGS="" HOME=/nonexistant PLT_SETUP_OPTIONS="-j $(NUMJOBS) $(PLT_EXTRA)"

DEB_BUILDDIR := $(DEB_SRCDIR)/build

DEB_DH_INSTALL_ARGS_racket-common := -X${RACKET_ARCH} -X$(MZDYN)
DEB_DH_INSTALL_ARGS_racket-doc := -Xdoc/release-notes

# do not strip mzscheme, as this causes it to stop working
DEB_DH_STRIP_ARGS_racket := -Xbin/mzscheme

DEB_MAKE_INSTALL_TARGET= no-run

common-install-arch:: do-install-arch
common-install-indep:: do-install-indep

do-install-arch: PLT_EXTRA=--no-docs --no-zo
do-install-arch:
	$(DEB_MAKE_ENVVARS) $(MAKE) -C $(DEB_BUILDDIR) install DESTDIR=$(CURDIR)/debian/tmp

do-install-indep: PLT_EXTRA=--no-launcher --no-install --no-post-install
do-install-indep:
	$(DEB_MAKE_ENVVARS) $(MAKE) -C $(DEB_BUILDDIR) install DESTDIR=$(CURDIR)/debian/tmp

cleanbuilddir/racket::
	rm -rf build
	rm -rf include # This got created at build-time
	rm -f debian/mzconfig.h debian/racket-arch.mk

debian/racket-arch.mk: debian/racket-arch.c
	touch debian/mzconfig.h && cpp -Isrc -Idebian -o - $< | tail -1 > $@

get-orig-source:
	git archive --format=tar --prefix=racket-${UPSTREAM}/ upstream/${UPSTREAM} | gzip -9 > ../${ORIG}

PATCH_EXPORT_SCRIPT = /usr/share/gitpkg/hooks/quilt-patches-deb-export-hook

export-patches: 
	[ ! -r debian/patches ] || \
	grep "^\#.*$(notdir $(PATCH_EXPORT_SCRIPT))" debian/patches/series
	rm -rf debian/patches
	bash $(PATCH_EXPORT_SCRIPT)

.PHONY: git-orig-source export-patches
