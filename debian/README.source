This package should be ready to build when the source package is
unpackaged via "dpkg-source -x".

The Debian packaging for racket (previously known as plt-scheme) is now stored in git.

These are untested notes.  The old notes can viewed with 'git show debian/5.0.2-1:debian/README.source'

* Branch Layout

  Currently there are three main branches

  - upstream contains the release branch history, along with file
    deletions to make it match the upstream release tar balls. Tags
    are upstream/$ver where $ver is an upstream version.

 - debian contains packaging commits.

   Tags are packaging/$debian_ver where $debian_ver is a debian
   version.

 - master is merged debian and upstream.

   Tags are debian/$debian_ver where $debian_ver is a debian version.

There is also a branch pristine-tar contains information used by the
pristine-tar utility to reconstruct bit identical upstream tarball.

The master branch is a debianized source tree, and should be buildable
by any number of tools (including dpkg-buildpackage).

* gitpkg and sbuild basics

  My (David's) preferred workflow is based on gitpkg and sbuild.  To
  tell gitpkg to use the tarballs from git,

  % git config gitpkg.pre-export-hook /usr/share/gitpkg/hooks/pristine-tar-pre-export-hook

** Make a source package

  % gitpkg master

** Build existing debian version
   - gitpkg debian/$version

** Problems with pristine-tar?
   pristine-tar Needs a large TMPDIR.  I found even 180M free in /tmp
   is not enough. Try

     export TMPDIR=/var/tmp

* New upstream version

** Update upstream branch
   - git checkout upstream
   - git merge -s recursive -X theirs vXXXX  
     # where vXXXX is an upstream tag. Since v5.0.1, these tags should all be on 
     # upstream branch stable.

     
   - optionally auto resolve file deletion conflicts:  # check that this is still needed with a linear upstream
     		     	     	  	   	       # history
     - git status -s | egrep '^(DU|UA| U|U |UD)' | cut -c4- | xargs git rm --ignore-unmatch DUMMY$$
     - git commit

** Import upstream tarball
   The manual import does some slightly dangerous things. It is
   preferable to understand what one is typing.  In principle
   git-import-orig (from git-buildpackage) ought to work as well.
   # If we can verify git-import-orig works fine most of the time, probably the 
   # following scary instructions can be removed.
   - Manual import:
     - git checkout upstream
     - git clean -fxd
     - git ls-files -z | xargs -0 rm -f
     - tar --strip-components=1 -zxf $tarball
     - git add -A
     - git commit -m 'Importing '`basename $tarball`
     - pristine-tar commit $tarball
   - git tag upstream/$version

** Update master branch
   - git checkout master
   - git merge upstream/$version

 -- David Bremner <bremner@debian.org>, Mon, 27 Dec 2010 23:20:29 -0400
