_syntax-color_

The syntax-color collection provides the underlying data structures
and some helpful utilities for the color:text% class of the framework
(collects/framework/private/color.ss).

_token-tree.ss_
A splay-tree class specifically geared for the task of on-the-fly
tokenization.

_paren-tree.ss_
Parenthesis matching code built on top of token-tree.

_scheme-lexer.ss_
A lexer for Scheme (including mzscheme extensions) build
specifically for color:text%.

scheme-lexer returns 5 values:

 - A string containing the matching text.  Block comments and specials
   currently return an empty string.  This may change in the future to
   other string or non-string data.

 - A symbol in '(error comment white-space constant string no-color
   parenthesis other symbol eof)

 - A symbol in '(|(| |)| |[| |]| |{| |}|) or #f

 - A number representing the starting position of the match.
 
 - A number representing the ending position of the match.

_default-lexer.ss_
A lexer that only identifies the following: ( ) [ ] { }
also build specifically for color:text%.

default-lexer returns 5 values:

 - A string containing the matching text.  Block specials currently
   return an empty string.  This may change in the future to other
   string or non-string data.

 - A symbol in '(comment white-space no-color eof)

 - A symbol in '(|(| |)| |[| |]| |{| |}|) or #f

 - A number representing the starting position of the match.
 
 - A number representing the ending position of the match.



